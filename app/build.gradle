apply plugin: 'com.android.application'

def cfg = rootProject.ext.android
def appId = rootProject.ext.appId
def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file("keystore.properties")
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
android {
    signingConfigs {
        config {
            v1SigningEnabled true
            v2SigningEnabled true
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }


    }
    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }
    compileSdkVersion cfg.compileSdkVersion
    buildToolsVersion cfg.buildToolsVersion
    dexOptions {
        jumboMode = true
    }

    defaultConfig {
        ndk {
            abiFilters "armeabi", "armeabi-v7a", "x86", "mips"
        }
        multiDexEnabled true
        applicationId appId["app"]
        minSdkVersion cfg.minSdkVersion
        targetSdkVersion cfg.targetSdkVersion
        versionCode cfg.versionCode//更新次数
        versionName cfg.versionName//版本号
        //resourcePrefix "app_"
        //arouter
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }

    }

    lintOptions {


        checkReleaseBuilds false
        abortOnError false
    }
    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
        debug {
            minifyEnabled false
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
    }
}
dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    if (isModuleRun.toBoolean()) {
        //当isModuleRun true，app得依赖基础库，保证app不报错
        compile project(':basemodule')
        compile 'com.alibaba:arouter-api:1.2.1.1'
        annotationProcessor 'com.alibaba:arouter-compiler:1.1.2.1'

    } else {
        compile project(':cartmodule')
        compile project(':goodsmodule')
        compile project(':ordermodule')
        compile project(':usermodule')
        compile 'com.alibaba:arouter-api:1.2.1.1'
        annotationProcessor 'com.alibaba:arouter-compiler:1.1.2.1'

    }
    compile 'com.android.support:support-v4:26.1.0'
    annotationProcessor 'com.alibaba:arouter-compiler:1.1.2.1'

}

